# MSIX Config Steps

parameters:
  - name: applicationName
    type: string
    default: SyncierDemoApp
  - name: applicationEntryPoint
    type: string
    default: app.exe
  - name: applicationWorkingDirectory
    type: string
    default: /
  - name: applicationProcessExecutable
    type: string
    default: app
  - name: applicationProcessFileRedirectionFixupBase
    type: string
    default: /
  - name: applicationProcessFileRedirectionFixupPatterns
    type: object
    default: []

steps:
# MAKEPRI: GENERATE PRICONFIG.XML and create the pri files
- task: PowerShell@2
  displayName: 'RUN PriConfig'
  inputs:
    targetType: inline
    workingDirectory: AppConfigured
    script: |
      $appWorkingFolder=(Get-Location).Path
      $appMsixSourceFolderName="."
      ## MakePri: Generate Config for Resources package 
      & "..\src\Tools\windowskit\x64\makepri.exe" createconfig /cf ".\$appMsixSourceFolderName\priconfig.xml" /dq en-US /o
      ## MakePri: Create the resources.pri file(s)
      & "..\src\Tools\windowskit\x64\makepri.exe" new /pr ".\$appMsixSourceFolderName" /cf ".\$appMsixSourceFolderName\priconfig.xml" /of ".\$appMsixSourceFolderName\resources.pri" /mn ".\$appMsixSourceFolderName\appxmanifest.xml" /o

  # CREATE/CHANGE THE CONFIG.JSON ?
- task: PowerShell@2
  displayName: 'UPDATE Psf Configuration'
  enabled: false
  inputs:
    targetType: inline
    workingDirectory: AppConfigured
    script: |

      $psfConfig = Get-Content "config.json" -raw | ConvertFrom-Json
      $psfConfig.applications[0].id = "${{ parameters.applicationName}}"
      $psfConfig.applications[0].executable = "${{ parameters.applicationEntryPoint}}"
      $psfConfig.applications[0].workingDirectory = "${{ parameters.applicationWorkingDirectory}}"
      $psfConfig.processes[0].executable = "${{ parameters.applicationProcessExecutable}}"
      $psfConfig.processes[0].fixups[0].config.redirectedPaths.packageRelative[0].base = "${{ parameters.applicationProcessFileRedirectionFixupBase}}"
      #$psfConfig.processes[0].fixups[0].config.redirectedPaths.packageRelative[0].patterns = [ ${{ join(',', parameters.applicationProcessFileRedirectionFixupPatterns) }} ]
      $psfConfig | ConvertTo-Json -depth 32 | % { [System.Text.RegularExpressions.Regex]::Unescape($_) } | Out-File "config.json"
