# CD ROOT Stage 
parameters:
- name: applicationName
  type: string
- name: msixVersion
  type: string
- name: msixApplicationUNCPath
  type: string

stages:
- stage: CD
  displayName: CD
  jobs:
  - deployment: PublishImage
    displayName: PublishImage
    pool:
      vmImage: windows-latest
    environment: 'MSIX_AppAttach_Dev'
    strategy:
      runOnce:
        deploy:
          steps:
          # Image (VHDX) publishing process
          - template: ./CD-imagePublish-steps.yaml
            parameters:
              azureSubscription: $(azureSubscription)
              resourceGroup: $(resourceGroup)
              storageAccount: $(storageAccount)
              applicationName: ${{ parameters.applicationName}}
              msixVersion: ${{ parameters.msixVersion }}
              msixApplicationUNCPath: ${{ parameters.msixApplicationUNCPath }}

          # App (AVD MSIX Appattach) publishing process
          # Output the variable 'msixPackageFullName'
          - template: ./CD-appPublish-steps.yaml
            parameters:
              azureSubscription: $(azureSubscription)
              resourceGroup: $(resourceGroup)
              hostPoolName: $(hostPoolName)
              msixVersion: ${{ parameters.msixVersion }}
              msixApplicationUNCPath: ${{ parameters.msixApplicationUNCPath }}
              applicationName: ${{ parameters.applicationName}}
  
  # Manual intervention Job for Release evaluation
  - job: waitForValidation
    displayName: Wait for external validation
    dependsOn: PublishImage
    pool: server
    timeoutInMinutes: 4320 # job times out in 3 days
    steps:
    - task: ManualValidation@0
      timeoutInMinutes: 1440 # task times out in 1 day
      inputs:
        notifyUsers: $(notifyManualValidationEmails)
        instructions: 'MSIX package has been registered and currently inactive. Make sure this package exists in any application group so it can be activated and made available to end-users.'
        onTimeout: 'resume'

  - job: activateMsixPackage
    displayName: Activate MSIX Package
    condition: in(dependencies.waitForValidation.result, 'Succeeded', 'Skipped')
    dependsOn: ['PublishImage', 'waitForValidation']
    pool:
      vmImage: windows-latest
    variables:
      msixPackageFullName: $[ dependencies.PublishImage.outputs['PublishImage.createMsixPackage.msixPackageFullName'] ]
    steps:

    - template: ./CD-appAVDApprovalActive-steps.yaml
      parameters:
        azureSubscription: $(azureSubscription)
        resourceGroup: $(resourceGroup)
        hostPoolName: $(hostPoolName)
        applicationFullName: $(msixPackageFullName)
        applicationName: ${{ parameters.applicationName}}
