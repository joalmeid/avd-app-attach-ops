# PUBLISH MSIX AppAttach App in AVD
parameters:
  - name: msixVersion
    type: string
    default: 0.0.0.0
  - name: azureSubscription
    type: string
  - name: resourceGroup
    type: string
    default: dev-rg
  - name: hostPoolName
    type: string
    default: dev-avd
  - name: msixApplicationUNCPath
    type: string
    default: \\fileshare.onmicrosoft.com\app-msix-image-0.0.0.0.vhdx
  - name: applicationName
    type: string
    default: app

steps:

# Register MSIX AppAttach to AVD as inactive
- task: AzurePowerShell@5
  displayName: 'CREATE AVD Msix Package'
  name: createMsixPackage
  inputs:
    azureSubscription: ${{parameters.azureSubscription}}
    scriptType: inlineScript
    azurePowerShellVersion: latestVersion
    pwsh: false
    inline: |
      Install-PackageProvider -Name NuGet -Force -Scope CurrentUser
      Install-Module -Name Az.DesktopVirtualization -Force -Verbose -Scope CurrentUser
      Write-Host "##[debug] Pubishing AVD Msix Package:"
      Write-Host "##[debug] `tAVD Resource Group: ${{ parameters.resourceGroup }}"
      Write-Host "##[debug] `tAVD Host Pool Name: ${{ parameters.hostPoolName }}"
      Write-Host "##[debug] `tMsix Application UNC Path: ${{ parameters.msixApplicationUNCPath }}"
      Write-Host "##[debug] `tApplication Display Name: ${{ parameters.applicationName }}"

      $objPackage = Expand-AzWvdMsixImage -HostPoolName ${{ parameters.hostPoolName }} -ResourceGroupName ${{ parameters.resourceGroup }} -Uri ${{ parameters.msixApplicationUNCPath }}
      Write-Host "##[debug] `tPackage Full Name: $($objPackage.PackageFullName)"
      # ADD AS INACTIVE
      New-AzWvdMsixPackage -HostPoolName ${{ parameters.hostPoolName }} -ResourceGroupName ${{ parameters.resourceGroup }} -PackageAlias $objPackage.PackageAlias -DisplayName ${{ parameters.applicationName }} -ImagePath ${{ parameters.msixApplicationUNCPath }} -IsActive:$false
      # Create Variable with Package Full Name 
      Write-Host "##vso[task.setvariable variable=msixPackageFullName;isOutput=true]$($objPackage.PackageFullName)"
      